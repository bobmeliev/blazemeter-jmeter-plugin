Index: src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java	(revision 3e8469624b1533eb5d2cdd48e3721f844701ff2a)
+++ src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java	(revision )
@@ -286,7 +286,7 @@
 
         bmTestManager.runInTheCloud();
         TestInfo testInfo = bmTestManager.getTestInfo();
-        if (testInfo.getError()==null&testInfo.getStatus()==TestStatus.Running) {
+        if (testInfo.getError() == null & testInfo.getStatus() == TestStatus.Running) {
             String url = bmTestManager.getTestUrl();
             if (url != null)
                 url = url.substring(0, url.length() - 5);
Index: src/main/java/com/blazemeter/jmeter/utils/BlazemeterApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/blazemeter/jmeter/utils/BlazemeterApi.java	(revision 3e8469624b1533eb5d2cdd48e3721f844701ff2a)
+++ src/main/java/com/blazemeter/jmeter/utils/BlazemeterApi.java	(revision )
@@ -563,20 +563,26 @@
         return update;
     }
 
-    public synchronized String startTestLocal(String userKey, String testId) {
+    public synchronized void startTestLocal(String userKey, String testId) {
         String startTestResult = "";
+        BmTestManager bmTestManager = BmTestManager.getInstance();
+        TestInfo testInfo = bmTestManager.getTestInfo();
         if (userKey == null || userKey.trim().isEmpty()) {
             startTestResult = "Local(Reporting only) test was not started: userKey is empty";
             BmLog.error(startTestResult);
             BmLog.console(startTestResult);
-            return startTestResult;
+            testInfo.setError(startTestResult);
+            bmTestManager.NotifyTestInfoChanged();
+            return;
         }
 
         if (testId == null || testId.trim().isEmpty()) {
             startTestResult = "Local(Reporting only) test was not started: testID is empty";
             BmLog.error(startTestResult);
             BmLog.console(startTestResult);
-            return startTestResult;
+            testInfo.setError(startTestResult);
+            bmTestManager.NotifyTestInfoChanged();
+            return;
         }
 
         String url = this.urlManager.testStartLocal(APP_KEY, userKey, testId);
@@ -594,9 +600,10 @@
 
         if (errorMessage.equals("Test already running, please stop it first") & errorCode.equals("500")) {
             BmLog.error("Local(Reporting only) test was not started: " + errorMessage.toLowerCase());
-            return errorMessage;
+            testInfo.setError(errorMessage);
+            bmTestManager.NotifyTestInfoChanged();
+            return;
         }
-        return startTestResult;
     }
 
     /**
Index: src/main/java/com/blazemeter/jmeter/testexecutor/BmTestManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/blazemeter/jmeter/testexecutor/BmTestManager.java	(revision 3e8469624b1533eb5d2cdd48e3721f844701ff2a)
+++ src/main/java/com/blazemeter/jmeter/testexecutor/BmTestManager.java	(revision )
@@ -98,15 +98,19 @@
     }
 
 
-    public String startLocalTest() {
-        String startLocalTestResult = "";
+    public void startLocalTest() {
+        String startLocalTestResult = null;
+        TestInfo testInfo = getTestInfo();
+
         if (JMeterPluginUtils.inCloudConfig()) {
             startLocalTestResult = "Test will not be started, start test in the cloud";
             BmLog.debug(startLocalTestResult);
             BmLog.error(startLocalTestResult);
-            return startLocalTestResult;
+            testInfo.setError(startLocalTestResult);
+            NotifyTestInfoChanged();
+            return;
         }
-        TestInfo testInfo = getTestInfo();
+//        testInfo = getTestInfo();
         String userKey = getUserKey();
         BmLog.console("startTest" + testInfo);
 
@@ -134,28 +138,33 @@
 
             try {
                 if (Utils.isTestPlanEmpty()) {
-                    startLocalTestResult = "Cannot start test: test-plan is empty";
-                    JMeterUtils.reportErrorToUser(startLocalTestResult);
+                    // move to TestPanelGui testInfoNotificationListeners
+                    startLocalTestResul = "Cannot start test: test-plan is empty";
+                    JMeterUtil.reportErrorToUser(startLocalTestResult);
+
                     BmLog.debug(startLocalTestResult);
-                    return startLocalTestResult;
+                    testInfo.setError(startLocalTestResult);
+                    NotifyTestInfoChanged();
+                    return;
                 }
                 if (!JMeter.isNonGUI()) {
                     checkChangesInTestPlan();
                 }
                 uploadJmx();
-                startLocalTestResult = rpc.startTestLocal(userKey, testInfo.getId());
+                rpc.startTestLocal(userKey, testInfo.getId());
+                // move to testInfoNotificationListeners
                 if (startLocalTestResult.equals("Test already running, please stop it first")) {
                     return startLocalTestResult;
                 }
                 testInfo.setStatus(TestStatus.Running);
                 NotifyTestInfoChanged();
-                startLocalTestResult = "";
+                startLocalTestResult = null;
 
             } catch (Throwable ex) {
                 BmLog.error("Test was not started locally", ex);
             }
         }
-        return startLocalTestResult;
+        return;
     }
 
     public void stopTest() {
