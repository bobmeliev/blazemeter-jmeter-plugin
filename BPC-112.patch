Index: src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java	(revision 3e0dd33988eb413a0b1541594e94b648e5dc65f6)
+++ src/main/java/com/blazemeter/jmeter/testexecutor/TestPanelGui.java	(revision )
@@ -1,6 +1,7 @@
 package com.blazemeter.jmeter.testexecutor;
 
 import com.blazemeter.jmeter.testinfo.TestInfo;
+import com.blazemeter.jmeter.testinfo.TestInfoController;
 import com.blazemeter.jmeter.testinfo.TestInfoReader;
 import com.blazemeter.jmeter.testinfo.UserInfo;
 import com.blazemeter.jmeter.testinfo.writer.TestInfoWriter;
@@ -41,8 +42,11 @@
     private static final String LOADING_TEST_INFO = "Loading test info, please wait";
     private static final String CAN_NOT_BE_RUN = "This test could not be run from Jmeter Plugin. Please, select another one from the list above.";
     private static final String TEST_INFO_IS_LOADED = "Test info is loaded";
+    private static String TEST_ID = "";
     private static long lastCloudPanelUpdate = 0;
+    // change to JMeter property
     private static boolean areListenersInitialized = false;
+    // change to JMeter property
     private static boolean UPLOAD_JMX = false;
     private JTextField userKeyTextField;
     private JTextField testNameTextField;
@@ -552,6 +556,14 @@
                 new Thread(new Runnable() {
                     @Override
                     public void run() {
+                        fetchUserTestsAsync();
+
+                    }
+                }).start();
+
+                new Thread(new Runnable() {
+                    @Override
+                    public void run() {
                         //Reading testinfo from System.getProperty("user.home") + "\\testinfo.xml"
                         TestInfoReader testInfoReader = TestInfoReader.getInstance();
                         TestInfo testInfo = testInfoReader.loadTestInfo();
@@ -561,7 +573,6 @@
                             TestInfoWriter.getInstance().setTestInfo(testInfo);
                             savedTestInfo = testInfo;
                         }
-                        fetchUserTestsAsync();
                     }
                 }).start();
 
@@ -645,6 +656,8 @@
 
 //                    setTestInfo(testInfo);
                     updateTestInfo();
+/*
+
                     if ((testInfo != null) & (testInfo.name != NEW) & (!testInfo.name.isEmpty()) &
                             (testInfoChecker == null || testInfoChecker.isInterrupted())) {
                         startTestInfoChecker();
@@ -652,16 +665,24 @@
                     if (testInfo.name.equals(NEW)) {
                         stopTestInfoChecker();
                     }
-/*
 
-                   if ((testInfo.name != NEW)) {
+*/
 
+                    if ((testInfo.name != NEW) & (!testInfo.name.isEmpty())) {
+                        if (testInfo != null && !TEST_ID.equals(testInfo.id)) {
+                            TEST_ID = testInfo.id;
+                            TestInfoController.stop();
+
+                        } else {
+                            return;
-                    }
+                        }
+                        TestInfoController.start(testInfo.id);
 
-                    if (testInfo.name == NEW || (testInfo.name.isEmpty())) {
+                    }
 
+                    if (testInfo.name == NEW || (testInfo.name.isEmpty())) {
+                        TestInfoController.stop();
                     }
-*/
 
 
                 }
@@ -728,6 +749,11 @@
                     enableCloudControls(false);
                     testIdComboBox.setSelectedItem(EMPTY);
                 }
+                /*
+                  after setting NEW TestInfoController was stopped.
+                  We need to start it once again.
+                */
+                TestInfoController.start(TEST_ID);
             }
         });
 
@@ -794,7 +820,9 @@
         }
         if (!bmTestManager.getIsLocalRunMode()) {
                    /*TODO
+
                    Update cloud panel
+                   */
             if ("jmeter".equals(testInfo.type)) {
                 locationComboBox.setSelectedItem(testInfo.getLocation());
                 numberOfUsersSlider.setValue(testInfo.getNumberOfUsers());
@@ -812,7 +840,7 @@
             } else {
                 infoLabel.setText(testIdComboBox.getSelectedItem().equals(NEW) ? SELECT_TEST : CAN_NOT_BE_RUN);
             }
-                   */
+
 
         }
     }
